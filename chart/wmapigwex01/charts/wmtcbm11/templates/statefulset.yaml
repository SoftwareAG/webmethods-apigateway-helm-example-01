apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
  labels:
    {{- include "wmtcbm11.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Values.global.customPrefix }}{{ .Values.serviceName }}
  # 1 replica by design decision
  replicas: 1
  # The default is to deploy all pods serially. By setting this to parallel all pods are started at
  # the same time when bootstrapping the cluster
  #podManagementPolicy: "Parallel"
  # updateStrategy:
  #   type: RollingUpdate
  #   rollingUpdate: 
  #     partition: 0
  volumeClaimTemplates:
  - metadata:
      name: diskstore-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
      labels:
        {{- include "wmtcbm11.labels" . | nindent 8 }}
    {{- with .Values.persistence.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- toYaml .Values.volumeClaimTemplates.diskstore | nindent 6 }}
  - metadata:
      name: backups-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
      labels:
        release: {{ .Release.Name | quote }}
        chart: {{ .Chart.Name }}
        app: {{ include "wmtcbm11.fullname" . }}
    spec:
      {{- .Values.volumeClaimTemplates.backups | toYaml | nindent 6 }}
  - metadata:
      name: index-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
      labels:
        release: {{ .Release.Name | quote }}
        chart: {{ .Chart.Name }}
        app: {{ include "wmtcbm11.fullname" . }}
    spec:
      {{ toYaml .Values.volumeClaimTemplates.index | nindent 6 }}

  selector:
    matchLabels:
      {{- include "wmtcbm11.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wmtcbm11.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: img-pull-secret-{{ include "wmtcbm11.fullname" . }}
      {{- end }}
      serviceAccountName: {{ include "wmtcbm11.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.registry }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.portPrefix }}10
              name: tsaport
              protocol: TCP
            # normally these ports are not used, uncomment in case of need
            # - containerPort: {{ .Values.portPrefix }}20
            #   name: jmxport
            #   protocol: TCP
            # - containerPort: {{ .Values.portPrefix }}30
            #   name: groupport
            #   protocol: TCP
            - containerPort: {{ .Values.portPrefix }}40
              name: mgtport
              protocol: TCP
            # - containerPort: 9889
            #   name: http
            #   protocol: TCP

          ## TODO: discover the new probes
          # startupProbe:
          #   failureThreshold: 30
          #   periodSeconds: 15
          #   exec:
          #     command:
          #     - /bin/bash
          #     - ./healthcheck.sh
          # livenessProbe:
          #   successThreshold: 1
          #   failureThreshold: 4
          #   periodSeconds: 15
          #   timeoutSeconds: 5
          #   exec:
          #     command:
          #     - /bin/bash
          #     - ./healthcheck.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
            - name: diskstore-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
              mountPath: {{ .Values.mountPaths.diskstore }}
            - name: backups-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
              mountPath: {{ .Values.mountPaths.backups }}
            - name: index-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
              mountPath: {{ .Values.mountPaths.index }}
            - name: config-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
              mountPath: {{ .Values.mountPaths.config }}
      volumes:
      - name: config-{{ .Values.global.customPrefix }}{{ .Values.statefulsetName }}
        projected:
          sources:
          - secret:
              name: {{ .Values.global.customPrefix }}-tcbm-license-key
          - configMap:
              name: {{ .Values.global.customPrefix }}-tc-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
