# Default values for wmtcbm11.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Constants used in the charts, as per design decisions:
# These will not be declared here
# replicaCount: 1


###############################################################
## Values that are expected to change frequently
###############################################################

# pointing to the officially supported Software AG registry
image:
  registry: sagcr.azurecr.io
  repository: bigmemorymax-server
  pullPolicy: Always
  tag: 4.4.0

# Note: these mounts are always required
# the mount
mountPaths:
  # as per official documentation, tc-config.xml and the license.key files 
  # must be mounted in readonly mode in this declared VOLUME
  # see https://containers.softwareag.com/products/bigmemorymax-server - setup instructions
  # the license file must be a secret
  config: /opt/softwareag/config
  diskstore: /data/diskstore
  index: /data/index
  backups: /data/backups

licenseKey: ./license.key

###############################################################
## Values to be changed less frequently, for advanced users
###############################################################

statefulsetName:   "terracotta-ss"
serviceName:       "terracotta-headless-service"

## image pull secrets
imagePullSecrets: []

# additionals labels
labels: {}

nameOverride: ""
fullnameOverride: ""

# the licensing needed for the product
licenseSecret: {}
  # name: ""
  # key: ""
  # path: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1724

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1724

# Labels: Add default labels for the volumeClaimTemplate
persistence:
  diskstore:
    #enabled: false
    #labels:
    #  enabled: true
    annotations: {}
  backups:
    #enabled: false
    #labels:
    #  enabled: true
    annotations: {}
  index:
    #enabled: false
    #labels:
    #  enabled: true
    annotations: {}

# these claim templates are only enabled if the persistence is enabled for the related layer
volumeClaimTemplates:
  diskstore:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: default
    resources:
      requests:
        storage: 20Gi
  backups:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: default
    resources:
      requests:
        storage: 10Gi
  index:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: default
    resources:
      requests:
        storage: 5Gi

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 2
    memory: 8Gi
  requests:
    cpu: 100m
    memory: 512Mi

nodeSelector: {}

tolerations: []

# affinity:        
#   podAntiAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#       - weight: 1
#         podAffinityTerm:
#           topologyKey: kubernetes.io/hostname
#           labelSelector: {}